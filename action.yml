name: "OpenWrt SDK"
description: "Build OpenWrt packages via the SDK"
author: aparcar
runs:
  using: 'composite'
  steps:
    - name: Copy host files
      run: |
        wget https://github.com/codetiger666/llvm-binary/releases/download/$(curl -sfL "https://api.github.com/repos/codetiger666/llvm-binary/releases/latest" | jq -r '.tag_name')/libclang.tar.gz
        tar -xf libclang.tar.gz
        mkdir -p ${{ github.action_path }}/lib || true
        cp clang/libclang.so* ${{ github.action_path }}/lib
        sudo ls -lh ${{ github.action_path }}/lib
        node_version=$(curl https://api.github.com/repos/openssl/openssl/releases | jq -r '.[].tag_name' | grep '^openssl-3.2.' | head -n1 | sed 's/openssl-//')
        wget https://nodejs.org/dist/v${node_version}/node-v${node_version}-linux-x64.tar.gz -O node.tar.gz
        tar -xf node.tar.gz
        mkdir -p ${{ github.action_path }}/node
        cp -ra node-v${node_version}-linux-x64/* ${{ github.action_path }}/node
      shell: bash
    - name: mod binary permissions
      run: |
        sudo chmod +x ${{ github.action_path }}/lib/* || true
      shell: bash
    - run: |
        echo "artifacts_dir=${ARTIFACTS_DIR:-$GITHUB_WORKSPACE}" >> "$GITHUB_OUTPUT"
        echo "feed_dir=${FEED_DIR:-$GITHUB_WORKSPACE}" >> "$GITHUB_OUTPUT"
      shell: bash
      id: inputs
    - run: sudo chown -R 1000:1000 ${{ steps.inputs.outputs.artifacts_dir }} ${{ steps.inputs.outputs.feed_dir }}
      shell: bash
    -
      name: Set up Docker QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Build Docker container image
      uses: docker/build-push-action@v6
      env:
        DOCKER_BUILD_SUMMARY: false
      with:
        push: false
        tags: sdk
        context: ${{ github.action_path }}
        build-args: |
          CONTAINER
          ARCH
        cache-to: type=gha,mode=max,scope=${{ env.CONTAINER }}-${{ env.ARCH }}
        cache-from: type=gha,scope=${{ env.CONTAINER }}-${{ env.ARCH }}
        load: true

    - run: |
        docker run --rm \
          --env BUILD_LOG \
          --env EXTRA_FEEDS \
          --env FEEDNAME \
          --env IGNORE_ERRORS \
          --env KEY_BUILD \
          --env PRIVATE_KEY \
          --env NO_DEFAULT_FEEDS \
          --env NO_REFRESH_CHECK \
          --env NO_SHFMT_CHECK \
          --env PACKAGES \
          --env INDEX \
          --env V \
          -v ${{ steps.inputs.outputs.artifacts_dir }}:/artifacts \
          -v ${{ steps.inputs.outputs.feed_dir }}:/feed \
          sdk
      shell: bash
    - run: sudo chown -R --reference=${{ steps.inputs.outputs.artifacts_dir }}/.. ${{ steps.inputs.outputs.artifacts_dir }}
      shell: bash
      if: always()
    - run: sudo chown -R --reference=${{ steps.inputs.outputs.feed_dir }}/.. ${{ steps.inputs.outputs.feed_dir }}
      shell: bash
      if: always()
